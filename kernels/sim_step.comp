#version 450
layout (local_size_x = 32) in;

#include "droplet.glsl"

layout (binding = 0) uniform Settings {
    // Inertia
    float inertia;
    // Minimum slope for capacity calculation
    float min_slope;
    // Capacity for droplets to carry material
    float capacity_const;
    // Sediment dropped beyond capacity
    float deposition;
    // Sediment picked up under capacity
    float erosion;
    // Force of gravity
    float gravity;
    // Evaporation rate
    float evaporation;
};

layout (binding = 1) buffer Droplets {
    Droplet droplets[];
};

layout (binding = 2, r32f) uniform image2D heightmap;
layout (binding = 3, r32f) uniform image2D erosionmap;

void main() {
    uint gid = gl_GlobalInvocationID.x;
    droplets[gid].pos += droplets[gid].dir / 1000.;
    ivec2 imgpos = ivec2(droplets[gid].pos * imageSize(erosionmap));
    imageStore(erosionmap, imgpos, vec4(-0.01 * cos(droplets[gid].pos.x * 8.)));
    //imageAtomicExchange(erosionmap, imgpos, -0.0001);
}
